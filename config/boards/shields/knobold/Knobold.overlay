/ {
    chosen {
        zmk,kscan = &kscan0;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        col-gpios
            = <&pro_micro 20 GPIO_ACTIVE_HIGH>
            , <&pro_micro 19 GPIO_ACTIVE_HIGH>
            , <&pro_micro 18 GPIO_ACTIVE_HIGH>
            ;

        row-gpios
            = <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        };
left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        };
right_encoder: encoder_right {
        compatible = "alps,ec11";
        label = "RIGHT_ENCODER";
        a-gpios = <&pro_micro 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <72>;
        };
sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <36>;
        };
};
&amp;i2c1 {
    status = "okay";
    sda-gpios = &lt;&amp;gpio1 1 GPIO_ACTIVE_LOW&gt;; // SDA: PD1
    scl-gpios = &lt;&amp;gpio1 0 GPIO_ACTIVE_LOW&gt;; // SCL: PD0
};

&amp;gpio1 {
    status = "okay";
};

&amp;st7789v_display {
    compatible = "sitronix,st7789v"; // Correct compatible driver
    reg = &lt;0x3e&gt;;
    label = "Display";
    i2c = &lt;&amp;i2c1&gt;;

    reset-gpios = &lt;&amp;gpio1 13 GPIO_ACTIVE_LOW&gt;; // Reset pin
    dc-gpios = &lt;&amp;gpio0 3 GPIO_ACTIVE_HIGH&gt;; // Data/Command pin
    bl-gpios = &lt;&amp;gpio1 10 GPIO_ACTIVE_HIGH&gt;; // Backlight pin

    width = &lt;240&gt;;
    height = &lt;320&gt;;
};
